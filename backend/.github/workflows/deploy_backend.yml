# /home/alxmultimedia.com/backend/deploy.yml
name: Deploy Backend

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du dépôt Git.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Configuration de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Étape 3 : Installation des dépendances
      - name: Install dependencies
        run: npm install      

      # Étape 4 : Ajout de la clé SSH pour se connecter au serveur
      - name: Start SSH agent and add key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          eval $(ssh-agent -s)
          echo "$SSH_PRIVATE_KEY" > /tmp/git_id_rsa
          chmod 600 /tmp/git_id_rsa
          ssh-add /tmp/git_id_rsa

      # Étape 5 : Copier le backend sur le serveur
      - name: Copy backend to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          touch known_hosts
          chmod 600 known_hosts
          ssh-keyscan -p $SSH_PORT -H $SERVER_IP >> known_hosts
          
          # Effectuer la copie vers le serveur
          rsync -avz --delete ./ root@$SERVER_IP:/home/alxmultimedia.com/backend -e "ssh -p $SSH_PORT -o UserKnownHostsFile=known_hosts -o IdentitiesOnly=yes -i /tmp/git_id_rsa"

      # Étape 6 : Redémarrer le conteneur Docker du backend sur le serveur
      - name: Restart Backend Container
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          ssh -p $SSH_PORT -o UserKnownHostsFile=known_hosts -o IdentitiesOnly=yes -i /tmp/git_id_rsa root@$SERVER_IP "
          docker stop back_node_prod || true &&
          docker rm back_node_prod || true &&
          docker run -d --name back_node_prod \
            --network prod_network \
            -e NODE_ENV=production \
            -e DB_USERNAME=${DB_USERNAME} \
            -e DB_PASSWORD=${DB_PASSWORD} \
            -e DB_HOST=${DB_HOST} \
            -e DB_PORT=${DB_PORT} \
            -e DB_NAME=${DB_NAME} \
            -e JWT_SECRET=${JWT_SECRET} \
            -p 7002:7000 \
            back_node_prod
          "

      # Étape 7 : Mettre à jour l'URL du remote Git
      - name: Set Remote Git URL
        env:
          GIT_REPO_URL: ${{ secrets.GIT_REPO_URL }}
        run: git remote set-url origin $GIT_REPO_URL
