# /home/dev.alxmultimedia.com/frontend/deploy.yml
name: Deploy Frontend Dev

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du dépôt Git
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Configuration de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Étape 3 : Installation des dépendances
      - name: Install dependencies
        run: npm install

      # Étape 4 : Build du projet
      - name: Build project
        run: npm run build

      # Étape 5 : Ajout de la clé SSH pour se connecter au serveur
      - name: Start SSH agent and add key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          eval $(ssh-agent -s)
          echo -e "$SSH_PRIVATE_KEY" > /tmp/git_id_rsa
          chmod 600 /tmp/git_id_rsa
          ssh-add /tmp/git_id_rsa || ssh-add -t 60 /tmp/git_id_rsa
            # Étape 6 : Copier le build sur le serveur
      
      # Étape 6 : Copier le build sur le serveur 
      - name: Copy build to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          DEPLOY_DIRECTORY: ${{ secrets.DEPLOY_DIRECTORY }}
        run: |
          touch known_hosts
          chmod 600 known_hosts
          
          # Correction du ssh-keyscan pour garantir que les variables sont bien utilisées
          ssh-keyscan -p ${SSH_PORT} -H ${SERVER_IP} >> known_hosts
          
          # Assurez-vous que la clé privée est bien placée et accessible
          echo "$SSH_PRIVATE_KEY" > /tmp/git_id_rsa_new
          chmod 600 /tmp/git_id_rsa_new

          # Effectuer la copie vers le serveur
          rsync -avz --delete build/ root@${SERVER_IP}:${DEPLOY_DIRECTORY} -e "ssh -p ${SSH_PORT} -o UserKnownHostsFile=known_hosts -o IdentitiesOnly=yes -i /tmp/git_id_rsa_new"


      
      # Étape 7 : Redémarrer le conteneur Docker du frontend sur le serveur dev
      - name: Restart Frontend Container
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          ssh -p $SSH_PORT -o UserKnownHostsFile=known_hosts -o IdentitiesOnly=yes -i /tmp/git_id_rsa_new root@$SERVER_IP "
          docker stop front_node_dev || true &&
          docker rm front_node_dev || true &&
          docker run -d --name front_node_dev -p 3001:80 -v $DEPLOY_DIRECTORY:/usr/share/nginx/html nginx:alpine
          "
